// @generated by protoc-gen-es v1.1.1 with parameter "target=ts"
// @generated from file depot/cloud/v2/token.proto (package depot.cloud.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf'
import {Message, proto3} from '@bufbuild/protobuf'

/**
 * @generated from message depot.cloud.v2.GetCacheRegistryRequest
 */
export class GetCacheRegistryRequest extends Message<GetCacheRegistryRequest> {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId = ''

  constructor(data?: PartialMessage<GetCacheRegistryRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.cloud.v2.GetCacheRegistryRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'build_id', kind: 'scalar', T: 9 /* ScalarType.STRING */},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCacheRegistryRequest {
    return new GetCacheRegistryRequest().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCacheRegistryRequest {
    return new GetCacheRegistryRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCacheRegistryRequest {
    return new GetCacheRegistryRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: GetCacheRegistryRequest | PlainMessage<GetCacheRegistryRequest> | undefined,
    b: GetCacheRegistryRequest | PlainMessage<GetCacheRegistryRequest> | undefined,
  ): boolean {
    return proto3.util.equals(GetCacheRegistryRequest, a, b)
  }
}

/**
 * @generated from message depot.cloud.v2.GetCacheRegistryResponse
 */
export class GetCacheRegistryResponse extends Message<GetCacheRegistryResponse> {
  /**
   * @generated from field: string image = 1;
   */
  image = ''

  /**
   * @generated from field: string token = 2;
   */
  token = ''

  constructor(data?: PartialMessage<GetCacheRegistryResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.cloud.v2.GetCacheRegistryResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'image', kind: 'scalar', T: 9 /* ScalarType.STRING */},
    {no: 2, name: 'token', kind: 'scalar', T: 9 /* ScalarType.STRING */},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCacheRegistryResponse {
    return new GetCacheRegistryResponse().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCacheRegistryResponse {
    return new GetCacheRegistryResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCacheRegistryResponse {
    return new GetCacheRegistryResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: GetCacheRegistryResponse | PlainMessage<GetCacheRegistryResponse> | undefined,
    b: GetCacheRegistryResponse | PlainMessage<GetCacheRegistryResponse> | undefined,
  ): boolean {
    return proto3.util.equals(GetCacheRegistryResponse, a, b)
  }
}
